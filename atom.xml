<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zonuy</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-11-16T11:31:27.919Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Zonuy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【知识分享】计算机网络（三）</title>
    <link href="http://example.com/2020/11/12/%E3%80%90%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://example.com/2020/11/12/%E3%80%90%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-11-12T08:38:18.000Z</published>
    <updated>2020-11-16T11:31:27.919Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络层（NL）"><a href="#网络层（NL）" class="headerlink" title="网络层（NL）"></a>网络层（NL）</h1><h2 id="IP地址表示"><a href="#IP地址表示" class="headerlink" title="IP地址表示"></a>IP地址表示</h2><p>1、IPv4：32bit    分类IP</p><p>​      IPv6：128bit</p><p>2、点分十进制</p><p>​    将32位地址每8位分为一组，再将其转换为十进制，并用“**.**”隔开</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp4_sldz.jpg"></p><p>3、特殊IP地址</p><p>​    ①主机号为全0，网络地址</p><p>​    ②主机号为全1，广播地址</p><p>​    ③网络号为全0，本地网络</p><p>​    ④网络号为全1，回传地址（localhost）</p><p>​            127.x.x.x（x的范围0~255）</p><p>​    ⑤专用地址</p><p>​        A：10.0.0.0 ~ 10.255.255.255</p><p>​        B：172.16.0.0 ~ 172.32.255.255</p><p>​        C：192.168.0.0 ~ 192.168.255.255</p><p>4、网络设备作用</p><p>​    物理层：HUB（集线器）</p><p>​    数据链路层：交换机（连接终端设备）</p><p>​    网络层：路由器（连接不同网络）</p><p>​    网络层以上：网关（网络的出口）</p><p>5、网络层提供的两种服务</p><p>​    虚电路：分段占用线路资源，面向连接（可靠）</p><p>​    数据报：面向无连接，不可靠</p><p>​    直接交付：目的IP与发送包的设备IP<strong>在</strong>同一网段</p><p>​    间接交付：目的IP与发送包的设备IP<strong>不在</strong>同一网段</p><p>​    同一网段：两个IP地址的网络地址相同</p><h2 id="IP地址与硬件地址"><a href="#IP地址与硬件地址" class="headerlink" title="IP地址与硬件地址"></a>IP地址与硬件地址</h2><p><strong>物理地址</strong>是数据链路层和物理层使用的地址；<strong>IP地址</strong>是网络层和以上各层使用的地址，是一种逻辑地址</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp4_yjdz.jpg"></p><h2 id="地址解析协议ARP"><a href="#地址解析协议ARP" class="headerlink" title="地址解析协议ARP"></a>地址解析协议ARP</h2><p>​            IP → MAC地址    </p><p>​    跳不过路由器，仅能在一个LAN中使用</p><p>*ARP的四种典型情况</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp4_ARPsy.jpg"></p><p>​    ①H → H（直接交付）：发送方是主机（如H1），要把IP数据报发送到同一个网络上的另一台主机（如H2）</p><p>​    ②H → R（间接交付）：发送方是主机（如H1），要把IP数据报发送到另一个网络上的一台主机（如H3或H4）</p><p>​    ③R → H（间接交付）：发送方是路由器（如R1），要把IP数据报转发到与R1连接在同一个网络（网2）上的主机（如H3）</p><p>​    ④R → R（直接交付）：发送方是路由器（如R1），要把IP数据报转发到网3上的一台主机（如H4）</p><hr><h2 id="IP数据报的格式"><a href="#IP数据报的格式" class="headerlink" title="IP数据报的格式"></a>IP数据报的格式</h2><p>1、面向无连接</p><p>2、数据头</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp4_sjt.jpg"></p><p>​    最大值60字节    最小值20字节</p><p>​    *<strong>必须是4字节的整数倍</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp4_zgs.jpg"></p><h2 id="IP数据报的固定部分（20B）"><a href="#IP数据报的固定部分（20B）" class="headerlink" title="IP数据报的固定部分（20B）"></a>IP数据报的固定部分（20B）</h2><p>1、版本：4bit</p><p>2、首部长度（范围5~15）：4bit    </p><p>​             单位：<strong>4字节</strong></p><p>3、总长度：16bit</p><p>​             单位：字节 （H + D）</p><p>​        包中数据部分长度 = 总长度 - 4 * 首部长度</p><p>4、标识：16bit</p><p>​        区分是否为一个报文的包</p><p>5、标志：3bit</p><p>​    MF：是不是最后一片</p><p>​        MF = 1 后面还有分片    MF = 0 是最后一片</p><p>​    DF：允许分片</p><p>​        DF = 0 允许分片    DF = 1 不允许分片</p><p>6、片偏移：13bit    → 排序</p><p>​    较长的分组在分片后，某片在原分组中的相对位置</p><p>​    片偏移以8个字节为偏移单位</p><p>7、生存时间：8bit</p><p>​    通过路由器的个数</p><p>8、协议：8位</p><p>​    指出此数据报携带的数据是使用何种协议</p><p>9、首部检验和：16位</p><p>bit                     1位</p><p>Byte                     8位</p><p>Word（字）         16位</p><p>Dword（双字）     32位</p><h2 id="查找路由表（Switch（））"><a href="#查找路由表（Switch（））" class="headerlink" title="查找路由表（Switch（））"></a>查找路由表（Switch（））</h2><p>①查直接交付（同一网络地址）</p><p>②查特定路由</p><p>③查路由表中有到达网络的路由</p><p>④查默认路由</p><p>⑤丢弃，报错</p><p>在路由表中，每条路由的主要两个信息：（<strong>目的网络地址，下一跳地址</strong>）</p><h2 id="划分子网"><a href="#划分子网" class="headerlink" title="划分子网"></a>划分子网</h2><p>从两级IP地址到三级IP地址</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp4_hfzw.jpg"></p><p>子网掩码（32bit，点分十进制）</p><p>​    构成：网络ID、子网ID所占位 置1，主机ID 置0</p><p>​    子网掩码：定长，用在网络内部</p><p>​    例1：IP：211.85.192.226，子网掩码：255.255.255.192</p><p>​            求：网络ID,子网ID，主机ID所占位数；网络地址，广播地址</p><p>​            ①网络ID：24bit    通过IP地址第一个字节求网络ID    </p><p>​                    本题中IP地址第一个字节为211，说明是C类地址，网络号占三个字节，即3 * 8 = 24bit</p><p>​            ②通过子网掩码求网络ID + 子网ID</p><p>​                    因为子网掩码将网络ID和子网ID所占位 <strong>置为1</strong>，本题中的255.255.255.192共有26位为1，则网络ID + 子网ID = 26</p><p>​                    又因为第一问已经算出网络ID为24bit，故子网ID为2bit</p><p>​            ③通过子网掩码求主机ID    子网掩码中<strong>0</strong>的个数</p><p>​                    由于子网掩码共32bit，网络ID和子网ID占26bit，则主机ID为6bit</p><p>​            ④网络地址：IP AND 子网掩码    也就是IP和子网掩码做<strong>“与”</strong>运算</p><p>​                    本题中两者做与运算的结果，也就是网络地址为：211.85.192.192</p><p>​            ⑤广播地址：相应主机位 <strong>置1</strong></p><p>​                    则本题中广播地址为：211.85.192.255</p><p>例2：某单位有4个办公地点，每个地点最多使用30个IP；申请了C类地址：211.85.192.0，试用子网掩码方法划分IP</p><p>​              由题知子网掩码为：255.255.255.224</p><p>​             <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp4_lt2.jpg"></p><p>​               第一个子网：211.85.192.32（网络地址 →001 00000）    </p><p>​                                       211.85.192.33（最小IP → 网络地址 + 1）</p><p>​                                                ……</p><p>​                                       211.85.192.62（最大IP → 广播地址 - 1）</p><p>​                                       211.85.192.63（广播地址    →001 11111）</p><h2 id="无分类编址（CIDR）-可变长度，网络域间使用"><a href="#无分类编址（CIDR）-可变长度，网络域间使用" class="headerlink" title="无分类编址（CIDR）[可变长度，网络域间使用]"></a>无分类编址（CIDR）[可变长度，网络域间使用]</h2><p>1、网络前缀</p><p>​    二级IP（网络号 + 主机号）→ 三级IP（网络号 + 主机号 + 子网号）→ 二级IP（网络前缀 + 主机号）</p><p>​    网络前缀 = 网络号 + 子网号</p><p>2、写法：斜线记法</p><p>​        表示的是地址块</p><p>3、目的：压缩路由表</p><p>​        用一个例子来说明 128.14.32.0 / 20</p><p>​        其子网掩码：255.255.240.0    （/后的数字20就是子网掩码中<strong>“1”</strong>的个数）</p><p>​            地址个数：2^（32-前缀（“1”的个数）） = 2^（32 - 20） = 2^12</p><p>​                注：①域间地址个数不减全0全1</p><p>​                        ②一个C类地址为2^8</p><p>​            最小地址：128.14.0010 0000.00000000</p><p>​            最大地址：128.12.0010 1111.11111111</p><p>​            有多少个C类地址？ 2^（32 - 前缀） / 2^8  = <strong>2^（24 - 前缀）</strong> </p><p>​    *网络前缀越短，其地址块所包含的地址数越多</p><p>​    *查找路由表会得到不止一个结果，从结果中选择网络前缀最长的 —— 最长后缀匹配</p><p>​      换句话说，网络前缀越长，网络越具体</p><p>​    *使用二叉搜索查找路由表</p><hr><h2 id="网际控制报文协议ICMP"><a href="#网际控制报文协议ICMP" class="headerlink" title="网际控制报文协议ICMP"></a>网际控制报文协议ICMP</h2><p>1、基本概念</p><p>​    ①网际层协议</p><p>​    ②ICMP报文放在IP包中</p><p>2、种类</p><p>​            差错报告报文：①终点不可达</p><p>​                                   ②时间超过</p><p>​                                   ③参数问题</p><p>​                                   ④重定向（改变路由）</p><p>​            询问报文：①回送请求和回答报文</p><p>​                            ②时间戳请求和回答报文</p><p>ping用来测试两个主机的连通性</p><h2 id="路由选择"><a href="#路由选择" class="headerlink" title="路由选择"></a>路由选择</h2><p>1、种类：①静态，动态</p><p>​               ②内部（IGP）、外部（EGP）网关协议</p><p>2、内部网关协议（RIP）[动态]</p><p>​        ①基于距离向量</p><p>​        ②距离：路由器个数（路由器到直接连接的网络的距离为1）</p><p>​        ③最佳路由：距离最短</p><p>​            最大距离：15    （如果是16：不可达）</p><p>3、特点</p><p>​    ①只和相邻路由器交换信息</p><p>​    ②交换完整路由表</p><p>​    ③按固定时间</p><p>​    *好消息传播得快，坏消息传播的慢</p><h2 id="内部网关协议（OSPF）-动态"><a href="#内部网关协议（OSPF）-动态" class="headerlink" title="内部网关协议（OSPF）[动态]"></a>内部网关协议（OSPF）[动态]</h2><p>1、分布式链路状态协议</p><p>​        与带宽成反比</p><p>​        与流量成正比（权值越大）</p><p>2、要点</p><p>​    ①与AS（自治系统）中所有路由器交换信息</p><p>​    ②交换摘要信息</p><p>​    ③链路发生变化，洪泛法传送</p><p>3、区域</p><p>​    把一个A（自治系统）划分更小的范围（可使洪泛法发送范围缩小）</p><p>​    区域号：点分十进制表示（主干区域：连通其他区域）</p><p>4、OSPF实验</p><p>​        ①建立区域</p><p>​        ②把路由器加入到指定区域</p><p>​        *OSPF不用UDP而是直接用IP数据报传送</p><h2 id="路由器的构成"><a href="#路由器的构成" class="headerlink" title="路由器的构成"></a>路由器的构成</h2><p>1、作用：①连接不同网络 ②路由选择</p><p>2、结构：</p><p>​        路由选择部分：路由选择协议 → 路由表 → 转发表</p><p>​        转发部分：I/O端口，交换结构</p><h2 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h2><p>1、IPv6地址：128位</p><p>2、地址表示：冒号十六进制</p><p>​        以字（2个字节，16位）为单位，每个字用十六进制表示，字与字之间用冒号分开（共8个字）</p><p>3、地址压缩</p><p>​    ①去除前导0</p><p>​    ②零压缩：用一对冒号来代替一组连续0，仅能使用一次</p><p>​    ③IPv6表示IPv4地址</p><p>​            ::IPv4地址（::点分十进制）</p><hr><p>谢谢你来看我的博客 — Zonuy</p><p>2020年11月13日</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网络层（NL）&quot;&gt;&lt;a href=&quot;#网络层（NL）&quot; class=&quot;headerlink&quot; title=&quot;网络层（NL）&quot;&gt;&lt;/a&gt;网络层（NL）&lt;/h1&gt;&lt;h2 id=&quot;IP地址表示&quot;&gt;&lt;a href=&quot;#IP地址表示&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>【知识分享】计算机网络（二）</title>
    <link href="http://example.com/2020/11/11/%E3%80%90%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://example.com/2020/11/11/%E3%80%90%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-11-11T01:21:40.000Z</published>
    <updated>2020-11-12T08:29:57.385Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据链路层（DL）"><a href="#数据链路层（DL）" class="headerlink" title="数据链路层（DL）"></a>数据链路层（DL）</h1><h2 id="信道"><a href="#信道" class="headerlink" title="信道"></a>信道</h2><p>1、<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp3_xd.jpg" style="zoom:80%;" /></p><p>2、链路，数据链路</p><p>​    链路（物理链路）：是一条无源（没有电源）的点到点的物理线路段，中间没有任何的交换结点</p><p>​    数据链路（逻辑链路） = 线路 + 协议</p><p>3、数据链路层功能</p><p>​    形成一个逻辑上无差错的链路</p><p>​    <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp3_sjz.jpg" style="zoom: 50%;" /></p><p>4、封装成帧</p><p>​    <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp3_fzcz.jpg" style="zoom: 50%;" /></p><p>5、透明传输</p><p>​    例    数据：75 03 86 04</p><p>​            线路：75 1B03 86 1B04（与标记重复，加1B把标记和数据区分开来）</p><p>​            接收：75 03 86 04</p><h2 id="PPP协议帧格式"><a href="#PPP协议帧格式" class="headerlink" title="PPP协议帧格式"></a>PPP协议帧格式</h2><p>1、标志（帧开始，帧结束）</p><p>​    标志字段F = 0x7E（7E 用二进制表示为 01111110）</p><p>2、透明传输：字符传输</p><p>​    ①0x7E → 0x7D 0x5E</p><p>​    ②0x7D → 0x5D</p><p>​    ③字符 &lt; 20 → 在字符前加上0x7D</p><p>​    例    数据：87 7E 95 7D 5E</p><p>​            线路：87 7D5E 95 7D5D 5E</p><p>​            接收：87 7E 95 7D 5E</p><h2 id="CRC循环冗余校验"><a href="#CRC循环冗余校验" class="headerlink" title="CRC循环冗余校验"></a>CRC循环冗余校验</h2><p>1、原理</p><p>​    ①发送帧：H+D的数据设为M</p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp3_crc.jpg" style="zoom:50%;" /><p>​    ②M * 2^n / P  → 得到的余数R就是FCS，则发送帧为 M * 2^n - R</p><p>​        P为设定帧数，P是n + 1位</p><p>​    ③接收端：（M * 2^n - R）/ P，余数为0，M正确；否则，M出错</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PS：   1、二进制中，乘法左移“1”，除法右移“1”</span><br><span class="line"></span><br><span class="line">2、二进制中几种运算</span><br><span class="line"></span><br><span class="line">与：按位清零1 ∧ 1 &#x3D; 11 ∧ 0 &#x3D; 00 ∧ 0 &#x3D; 0</span><br><span class="line"></span><br><span class="line">或：按位置1   1 ∨ 1 &#x3D; 11 ∨ 0 &#x3D; 10 ∨ 0 &#x3D; 0</span><br><span class="line"></span><br><span class="line">非：全部取反</span><br><span class="line"></span><br><span class="line">异或：按位取反1 ⊕ 1 &#x3D; 01⊕ 0 &#x3D; 10 ⊕ 0 &#x3D; 0</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp3_eg1.jpg" style="zoom: 67%;" /><hr><h2 id="PPP（不可靠）"><a href="#PPP（不可靠）" class="headerlink" title="PPP（不可靠）"></a>PPP（不可靠）</h2><p>1、可靠通信：有确认应答机制</p><p>2、标志（帧开始，帧结束）F：0x7E（二进制数表示：01111110）</p><p>3、透明传输：零比特填充（遇到连续的5个0要加一个0进行填充）</p><p>​        例：帧数据部分：0111110111111111100</p><p>​                线路上的数据：011111<strong>0</strong>011111<strong>0</strong>11111<strong>0</strong>0</p><h2 id="广播（LAN）1–全体"><a href="#广播（LAN）1–全体" class="headerlink" title="广播（LAN）1–全体"></a>广播（LAN）1–全体</h2><p>1、LAN仅有PL、DL</p><p>​        特点：范围小，广播发送</p><p>2、消除网络上的信号</p><p>​        星形：接收端消除</p><p>​    总线形：匹配电阻</p><p>​        环形：发送端</p><h2 id="Ethernet（以太网）"><a href="#Ethernet（以太网）" class="headerlink" title="Ethernet（以太网）"></a>Ethernet（以太网）</h2><p>1、概念</p><p>​    拓扑：总线形</p><p>​    MAC（介质访问控制）：CSMA/CD</p><p>​    编码：曼彻斯特编码</p><p>​    带宽：10 Mb/s</p><p>​    标准：DIXV2  IEEE802.3</p><p>​    服务：不可靠</p><p>2、网卡 （分为两种：adapter 适配器；NIC 网络接口卡）</p><p>​    网卡地址（也称物理地址，硬件地址，MAC地址）48位（6个字节 * 8位）</p><p>​    工作模式： ①正常：帧中目的地址与本机地址相同，接收；否则，丢弃</p><p>​                        ②混杂：听到即接收</p><h2 id="CSMA-CD协议（载波接听多点接入-碰撞检测）"><a href="#CSMA-CD协议（载波接听多点接入-碰撞检测）" class="headerlink" title="CSMA/CD协议（载波接听多点接入/碰撞检测）"></a>CSMA/CD协议（载波接听多点接入/碰撞检测）</h2><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp3_csma.jpg" style="zoom: 67%;" /><p>2、问题</p><p>​    ①为什么进行碰撞检测？    存在传播时延时间</p><p>​    ②多长时间检测到冲突？    2a（往返时延）</p><p>​    ③最短帧长</p><p>​        CSMA/CD工作前提：</p><p>​            发送时延 &gt; 往返时延</p><p>​            X(帧长) / B(带宽) &gt; 2 * L(线路长度) / S(信号速度)</p><p>​            最短帧长：X（帧长）&gt; (2* L * B) / S</p><p>3、争用期：往返延迟时间（2 * τ  τ为发送时延）</p><p>​        如果在往返时间里都没有冲突，那后面发送就不再有冲突了</p><p>4、截断式二进制指数退避算法（上面流程图中随机事件的确定）</p><p>​                r * 2τ</p><p>​        其中2τ是争用期，r是[0,1,…2^k - 1]集合中的随机数，k = min(10，冲突次数)，其中冲突次数的最大值为16</p><p>5、以太网默认值</p><p>​    带宽：10Mb/s</p><p>​    争用期：512bit，64字节</p><p>​    如果长度小于64字节，则为无效帧</p><hr><h2 id="星形以太网"><a href="#星形以太网" class="headerlink" title="星形以太网"></a>星形以太网</h2><p>1、物理上：星形</p><p>​      逻辑上：总线网</p><p>​       广播地址：FF-FF-FF-FF-FF-FF</p><p>2、MAC帧格式</p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp3_mac.jpg" style="zoom:80%;" /><p>3、快速转发    帧间最小间隔9.6μs</p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp3_kszf.jpg" style="zoom:67%;" /><p>4、保证最小帧长，由发送端数据链路层进行数据填充（补0），接收端删除填充数据，有网络层来完成</p><hr><h1 id="数据链路层扩展以太网"><a href="#数据链路层扩展以太网" class="headerlink" title="数据链路层扩展以太网"></a>数据链路层扩展以太网</h1><h2 id="以太网交换机"><a href="#以太网交换机" class="headerlink" title="以太网交换机"></a>以太网交换机</h2><p>1、传用设备：交换机（网桥）</p><p>2、网桥工作原理</p><p>​    ①从缓存中取出帧中的目的MAC地址</p><p>​    ②查找站表</p><p>​        找到，进入与转发端口相同？  相同：丢弃（过滤）；不同：转发指定端口</p><p>​    没找到，洪泛法，即除输入端口外，其他接收端都转发此帧</p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp3_wqzb.jpg" style="zoom:80%;" /><p>​    转发依据：用帧中的目的地址</p><p>3、站表建立</p><p>​    使用帧中的源地址（自学习）</p><p>4、生成树</p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp3_scs.jpg" style="zoom:67%;" /><h2 id="VLAN虚拟局域网"><a href="#VLAN虚拟局域网" class="headerlink" title="VLAN虚拟局域网"></a>VLAN虚拟局域网</h2><p>1、广播仅针对同一个VLAN号的端口（划分VLAN是针对交换机的端口）</p><p>2、划分VLAN方法</p><p>​    ①建立VLAN号（2~4095）</p><p>​    ②把交换机端口分配到指定VLAN中</p><hr><p>谢谢你来看我的博客 — Zonuy</p><p>2020年11月12日</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数据链路层（DL）&quot;&gt;&lt;a href=&quot;#数据链路层（DL）&quot; class=&quot;headerlink&quot; title=&quot;数据链路层（DL）&quot;&gt;&lt;/a&gt;数据链路层（DL）&lt;/h1&gt;&lt;h2 id=&quot;信道&quot;&gt;&lt;a href=&quot;#信道&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>【知识分享】计算机网络（一）</title>
    <link href="http://example.com/2020/11/10/%E3%80%90%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2020/11/10/%E3%80%90%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB%E3%80%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-11-10T01:59:44.000Z</published>
    <updated>2020-11-11T01:19:31.960Z</updated>
    
    <content type="html"><![CDATA[<h1 id="物理层（PL）"><a href="#物理层（PL）" class="headerlink" title="物理层（PL）"></a>物理层（PL）</h1><h2 id="物理层基本概念"><a href="#物理层基本概念" class="headerlink" title="物理层基本概念"></a>物理层基本概念</h2><p>1、单位：比特</p><p>2、作用：透明传输比特流</p><p>3、任务：确定与传输媒体的接口的一些特性</p><p>​    ①机械特性：接口所用接线器的形状和尺寸、引脚数目和排列、固定和锁定装置等</p><p>​    ②电气特性：在接口电缆的各条线上出现的电压范围</p><p>​        TTL（0: 0-1.5V；1: 3.5-5V）  串口（0： -15V-0；1： 0-15V）</p><p>​    ③功能特性：指明某条线上出现的某一电平的电压的意义</p><p>​    ④过程特性：指明对于不同功能的各种可能事件的出现顺序</p><h2 id="数据通信模型"><a href="#数据通信模型" class="headerlink" title="数据通信模型"></a>数据通信模型</h2><p>1、术语</p><p>​    ①数据：运送消息的实体</p><p>​    ②信号：数据的电气或电磁的表现</p><p>​        模拟信号：连续    数字信号：离散</p><p>2、调制（发送）：数字信号转换成模拟信号</p><p>​      解调（接收）：模拟信号转换成数字信号</p><p>​      码元：在使用时间域的波形表示数字信号时，代表不同离散数值的基本波形</p><p>​              码元二相制（1个比特）：0 1</p><p>​              码元四相制（2个比特）：00 01 10 11</p><p>​              码元八相制（3个比特）</p><p>​        波形速率不变，比特速率提高</p><p>3、信道（一个线路可分为多个信道）</p><p>​    单向通信（单工通信）：只能有一个方向的通信而没有反方向的交互（无线电广播、电视广播等）</p><p>​    双向交替通信（半双工通信）：通信的双方都可以发送信息，但不能同时发送。（一方发送，一方接收）</p><p>​    双向同时通信（全双工通信）：通信的双方可以同时发送和接收信息</p><p>4、基带信号（数字信号）~~来自信源的信号</p><p>​    基带调制：数字信号 → 数字信号（编码）</p><p>​    带通调制：数字信号 → 模拟信号</p><p>5、常用编码方式</p><p>​    ①曼彻斯特编码：时钟信号 + 数据信号</p><p>​            位周期中心的的<strong>向上跳变</strong>代表<strong>0</strong>，位周期中心的<strong>向下跳变</strong>代表<strong>1</strong></p><p>​    ②差分曼彻斯特编码：一个比特数据，用两个码元（波形）表示</p><p>​            在每一位的中心处始终都有跳变。位<strong>开始边界有跳变</strong>代表<strong>0</strong>，位<strong>开始边界没有跳变</strong>代表<strong>1</strong></p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp2_dttz.jpg" style="zoom:80%;" /><hr><h1 id="物理层下的传输媒体"><a href="#物理层下的传输媒体" class="headerlink" title="物理层下的传输媒体"></a>物理层下的传输媒体</h1><h2 id="有线介质"><a href="#有线介质" class="headerlink" title="有线介质"></a>有线介质</h2><p>1、双绞线：八根线，四对线</p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp2_sjx.jpg" style="zoom:80%;" /><p>​    ③绞合目的：抗电磁干扰</p><p>​    ④分类</p><p>​        屏蔽方式：有屏蔽，无屏蔽</p><p>​        绞合密度：1~7类 常用：5类 100m，100Mb/s    </p><p>​                                                  超5类线：185m，100Mb/s</p><p>​    ⑤拓扑结构：星型</p><p>2、同轴电缆</p><p>①分类：50Ω，75Ω</p><p>②适应拓扑：总线（AB–地址主线   CB–控制主线   DB–数据主线）</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp2_tzdl.jpg">                   </p><p>3、光纤（主干线路上使用）</p><p>​    分类：单膜：一个信号，直线</p><p>​                多膜：多个信号，不同入射角</p><hr><h1 id="信道复用技术"><a href="#信道复用技术" class="headerlink" title="信道复用技术"></a>信道复用技术</h1><p>1、频分（FDM）：某时刻有多路信号传输（有线电视）</p><p>2、时分（TDM）：一个信道的时间划分成时间片</p><p>​        统计时分，冗余（发送地址）          </p><p>3、码分复用（CDM）</p><p>​    ①码片：m位的二进制数字</p><p>​    ②发送一位数据 1：m位发送（00011011）</p><p>​                                0：m位的反码发送（11100100）</p><p>​    ③不同码片：不相同，规格化内积 = 0（正交）   </p><p>​        (S,T为两个码片)S * T =  (S<del>1</del>T<del>1</del> + S<del>2</del>T<del>2</del> + ……+ S<del>m</del>T<del>m</del>) / m</p><p>​        S * T = 0     作用：过滤掉其他信号</p><p>​        S * T = -1    作用：接收到0</p><p>​        S * T = 1     作用：接收到1</p><hr><h1 id="数据传输系统"><a href="#数据传输系统" class="headerlink" title="数据传输系统"></a>数据传输系统</h1><h2 id="PCM（脉码调制）"><a href="#PCM（脉码调制）" class="headerlink" title="PCM（脉码调制）"></a>PCM（脉码调制）</h2><p>1、采样定理</p><p>​    ①采样频率 = 信号频率 * 2</p><p>​    ②A/D转换（精度：A/D位数有关）</p><p>2、种类（时分复用）</p><p>​        北美24路（电话信号）PCM（T1 = 1.544 Mbit/s）</p><p>​        欧洲30路 PCM（E1 = 2.048 Mbit/s）</p><h2 id="ADSL（非对称数字用户线）"><a href="#ADSL（非对称数字用户线）" class="headerlink" title="ADSL（非对称数字用户线）"></a>ADSL（非对称数字用户线）</h2><p>1、拨号上网（33.6kb/s，56kb/s）</p><p>2、ISDN（一线通 128kb/s）</p><p>3、ADSL</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/chp2_adsl.jpg"></p><hr><p>谢谢你来看我的博客 — Zonuy</p><p>2020年11月10日</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;物理层（PL）&quot;&gt;&lt;a href=&quot;#物理层（PL）&quot; class=&quot;headerlink&quot; title=&quot;物理层（PL）&quot;&gt;&lt;/a&gt;物理层（PL）&lt;/h1&gt;&lt;h2 id=&quot;物理层基本概念&quot;&gt;&lt;a href=&quot;#物理层基本概念&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>【知识分享】计算机网络概述</title>
    <link href="http://example.com/2020/11/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2020/11/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/</id>
    <published>2020-11-09T12:09:55.000Z</published>
    <updated>2020-11-10T01:52:54.901Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><p>根据《计算机网络》（第七版），将网络分为五层，物理层（PL）、数据链路层（DL）、网络层（NL）、传输层（TL）和应用层（AL）</p><p>本博客将分成几部分介绍这五层的相关内容。</p><hr><h2 id="物理层（PL）"><a href="#物理层（PL）" class="headerlink" title="物理层（PL）"></a>物理层（PL）</h2><p>1、单位：bit（位） 1 Byte = 8 bit</p><p>存储器： 1 KB = 2^10 B</p><p>​                1 MB = 2^20 B</p><p>​                1 GB = 2^30 B</p><p>​                1 TB = 2^40 B</p><p>带宽： 1 Kb/s = 10^3 b/s</p><p>​             1 Mb/s = 10^6 b/s</p><p>​             1 Gb/s = 10^9 b/s</p><p>英文字符（1个字节） 用ASCII码表示 7位</p><p>​    00~~1F H：控制字符</p><p>​    20H~~7F H：可显示字符</p><p>​    41H~~5A H：A–Z</p><p>​    61H~~7A H：a–z</p><p>汉字（2个字节） GB23R 2字节</p><p>​                              UTF-8 3字节</p><p>2、线路：有线、无线</p><p>3、信号表示方法： 数字信号，模拟信号</p><hr><h2 id="数据链路层（DL）"><a href="#数据链路层（DL）" class="headerlink" title="数据链路层（DL）"></a>数据链路层（DL）</h2><p>单位：帧</p><table><thead><tr><th align="center">Head</th><th align="center">Information</th><th align="center">FCS</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center">奇校验</td></tr></tbody></table><p>作用：形成逻辑上无差错传输链路（链路：线路+协议）</p><hr><h2 id="网络层（NL）"><a href="#网络层（NL）" class="headerlink" title="网络层（NL）"></a>网络层（NL）</h2><p>作用：路由选择</p><p>单位：数据包</p><p>编址：IP地址（IPv4、IPv6）</p><hr><h2 id="传输层（TL）"><a href="#传输层（TL）" class="headerlink" title="传输层（TL）"></a>传输层（TL）</h2><p>进程与进程之间的通信</p><p>端口地址（16位）：区分进程</p><p>单位：报文段</p><hr><h2 id="应用层（AL）"><a href="#应用层（AL）" class="headerlink" title="应用层（AL）"></a>应用层（AL）</h2><ol><li><p>DNS：域名解析</p><p><a href="http://www.whpu.edu.cn/">www.whpu.edu.cn</a> → 211.85.197.1</p></li><li><p>ftp</p></li><li><p>email</p></li><li><p>DHCP</p></li></ol><hr><h2 id="结点在各层的名称设备"><a href="#结点在各层的名称设备" class="headerlink" title="结点在各层的名称设备"></a>结点在各层的名称设备</h2><p>PL：集线器（HUB） 连接网络设备终端</p><p>DL：交换机（switching HUB）连接网络设备终端</p><p>NL：路由器（router） 连接网络</p><p>高层：网关（Gate way）</p><hr><h2 id="端系统通信方式"><a href="#端系统通信方式" class="headerlink" title="端系统通信方式"></a>端系统通信方式</h2><p>1.客户/服务器模式（C/S）</p><p>   client进程 主动 后运行</p><p>   server进程 被动 先运行</p><p>2.P2P（对等方式）</p><p>   在使用服务的同时也在提供服务</p><hr><h1 id="互联网核心部分"><a href="#互联网核心部分" class="headerlink" title="互联网核心部分"></a>互联网核心部分</h1><h2 id="电路交换"><a href="#电路交换" class="headerlink" title="电路交换"></a>电路交换</h2><p>1、面向连接：①建立连接 ②数据传输 ③释放连接</p><p>2、缺点：①信道利用率不高 ②数据突发性</p><p>3、特点：①所有的包走同一路径</p><p>​                 ②在通话的全部时间内，通话的两个用户始终占用端到端的通信资源</p><h2 id="报文交换（存储转发）"><a href="#报文交换（存储转发）" class="headerlink" title="报文交换（存储转发）"></a>报文交换（存储转发）</h2><p>1、报文：要发送的数据</p><p>2、报文格式：</p><table><thead><tr><th>Head</th><th>Info/Data</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>3、面向无连接</p><p>特点：①不需要建立连接</p><p>​           ②报文可走不同路径</p><p>​           ③不能保证按序到达</p><p>​           ④每个报文需要完整的地址信息</p><p>​           ⑤分段占用线路资源</p><h2 id="报文分组交换（包交换）"><a href="#报文分组交换（包交换）" class="headerlink" title="报文分组交换（包交换）"></a>报文分组交换（包交换）</h2><p>1、重装→接收端处理</p><table><thead><tr><th>Head</th><th>Data</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>头信息：目的地址、源地址、序号、结束标志、区分分组的标志</p><h2 id="计算机网络定义和种类"><a href="#计算机网络定义和种类" class="headerlink" title="计算机网络定义和种类"></a>计算机网络定义和种类</h2><ol><li><p>定义：把分布在不同地点的设备按照某种拓扑结构连接起来，以某种协议要求进行相互通信，实现资源共享的系统</p></li><li><p>种类：</p><p>①网络的作用范围：WAN（广域网）、MAN（城域网）、LAN（局域网）、PAN（个人区域网）</p><p>②网络的使用者：公用网、专用网</p></li></ol><hr><h2 id="计算机网络性能指标"><a href="#计算机网络性能指标" class="headerlink" title="计算机网络性能指标"></a>计算机网络性能指标</h2><p>1、速率（单位：b/s）</p><p>​    单位时间内传送数据的多少</p><p>2、带宽</p><p>​    ①模拟信号（单位：HZ）</p><p>​        信号的频率范围</p><p>​    ②数字信号（单位：bit/s）</p><p>​        单位时间内网络中某信道所能通过的<strong>“最高数据率”</strong></p><p>3、吞吐量</p><p>​    网络输出负载；单位时间内通过某网络的数据量</p><p>4、时延</p><p>​    排队时延→处理时延→发送时延→传播时延</p><p>​    发送时延：发送时延是主机或路由器发送数据帧所需要的时间</p><p>​                        发送时延 = 数据帧长度（bit）/ 发送时延（bit/s）</p><p>​    传播时延：传播时延是电磁波在信道中传播一定的距离需要花费的时间</p><p>​                         传播时延 = 信道长度（m） / 电磁波在信道上的传播速率（m/s）</p><p>​                         信号传送的距离越远，传播时延越大，与信号的发送速率无关</p><p>5、时延带宽积</p><p>​    线路上所能存储的bit数量</p><p>​    时延带宽积 = 传播时延（s） * 带宽（bit/s）</p><p>6、往返时间（时延）→ 确定网络好坏的主要原因（卫星通道使用较多）</p><p>​    往返时间 = 2 * 传播时延</p><p>7、信道利用率</p><p>​    U = t（发送） / （2 * t（传播时延） + t（发送）+ t（排队+处理时间））</p><hr><h2 id="计算机网络体系结构"><a href="#计算机网络体系结构" class="headerlink" title="计算机网络体系结构"></a>计算机网络体系结构</h2><p>1、实现：采用分层方法</p><p>2、目的：使异构网络能相互通信</p><p>3、协议的定义和要素</p><p>​    ①定义：为进行网络中的数据交换而建立的规则、标准或约定</p><p>​    ②要素</p><p>​        语法：数据与控制信息的结构或格式</p><p>​        语义：需要发出何种控制信息，完成何种动作以及作出何种相应</p><p>​        同步：事件实现顺序的详细说明</p><p>*协议是控制两个对等实体（接收端和发送端）进行通信的规则的集合</p><p>*在协议的控制下。两个对等实体间的通信使得<strong>本层能够向上一层提供服务</strong>。要实现本层协议，还需要使用下面一层所提供的服务</p><p>*计算机网络的各层及其协议的集合就是网络的体系结构</p><hr><h2 id="各层完成的主要功能"><a href="#各层完成的主要功能" class="headerlink" title="各层完成的主要功能"></a>各层完成的主要功能</h2><p>1、差错控制（接收端）    使相应层次等对方的通信更加可靠</p><p>2、流量控制（接收端控制发送端）    发送端的发送速率必须是接收端来得及接收</p><p>3、分段和重装    发送端将要发送的数据块划分为更小的单位，在接收端将其还原</p><p>4、复用（发送端）和分用（接收端）    发送端几个高层会话复用一条低层的连接，在接收端再进行分用</p><p>5、建立连接和释放    交换数据前先建立一条逻辑连接，数据传送结束后释放连接</p><hr><p>谢谢你来看我的博客 — Zonuy</p><p>2020年11月9日</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机网络&quot;&gt;&lt;a href=&quot;#计算机网络&quot; class=&quot;headerlink&quot; title=&quot;计算机网络&quot;&gt;&lt;/a&gt;计算机网络&lt;/h1&gt;&lt;p&gt;根据《计算机网络》（第七版），将网络分为五层，物理层（PL）、数据链路层（DL）、网络层（NL）、传输层（TL）和应</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>【分享】零基础带你设计Windows窗体</title>
    <link href="http://example.com/2020/10/29/%E3%80%90%E5%88%86%E4%BA%AB%E3%80%91%E5%B8%A6%E4%BD%A0%E8%AE%BE%E8%AE%A1Windows%E7%AA%97%E4%BD%93/"/>
    <id>http://example.com/2020/10/29/%E3%80%90%E5%88%86%E4%BA%AB%E3%80%91%E5%B8%A6%E4%BD%A0%E8%AE%BE%E8%AE%A1Windows%E7%AA%97%E4%BD%93/</id>
    <published>2020-10-29T09:11:38.000Z</published>
    <updated>2020-11-07T03:29:19.895Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Visual-Studio-2019窗体设计"><a href="#使用Visual-Studio-2019窗体设计" class="headerlink" title="使用Visual Studio 2019窗体设计"></a>使用Visual Studio 2019窗体设计</h1><hr><h2 id="Visual-Studio-2019介绍"><a href="#Visual-Studio-2019介绍" class="headerlink" title="Visual Studio 2019介绍"></a>Visual Studio 2019介绍</h2><p><strong>Visual Studio 2019</strong> 可完美支持 C#、C++、Python、<a href="https://www.iplaysoft.com/tag/javascript">JavaScript</a>、Node.js、Visual Basic、<a href="https://www.iplaysoft.com/tag/html">HTML</a> 等流行的编程语言，不仅能用它来编写 <a href="https://www.iplaysoft.com/windows10.html">Windows 10</a> UWP 通用程序、开发 <a href="https://www.iplaysoft.com/tag/web">WEB</a> 服务、开发<a href="https://www.iplaysoft.com/category/game">游戏</a>，你甚至还能借助 Xamarin 开发 <a href="https://www.iplaysoft.com/os/ios-platform">iOS</a>、<a href="https://www.iplaysoft.com/os/android-platform">Android</a> 移动平台应用。</p><a id="more"></a><hr><h2 id="相关软件安装"><a href="#相关软件安装" class="headerlink" title="相关软件安装"></a>相关软件安装</h2><h3 id="Visual-Studio-2019安装"><a href="#Visual-Studio-2019安装" class="headerlink" title="Visual Studio 2019安装"></a>Visual Studio 2019安装</h3><p>下载链接：<a href="https://visualstudio.microsoft.com/zh-hans/downloads/">https://visualstudio.microsoft.com/zh-hans/downloads/</a></p><p>安装过程请自行百度。</p><p>但要注意的是，在选择安装<strong>工作负载</strong>时，一定要选择以下画圈的部分！</p><p>  <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/%E5%AE%89%E8%A3%851.png"></p><hr><h3 id="MySql安装"><a href="#MySql安装" class="headerlink" title="MySql安装"></a>MySql安装</h3><p>MySql在后面的复杂的窗体设计里需要用到，相关的增删改查的语句、视图以及其他的知识还是要学习一下的。</p><p>下载链接：<a href="https://www.mysql.com/downloads/">https://www.mysql.com/downloads/</a></p><p>安装教程可参考菜鸟教程：<a href="https://www.runoob.com/mysql/mysql-install.html">https://www.runoob.com/mysql/mysql-install.html</a></p><hr><h2 id="Visual-Studio初次使用"><a href="#Visual-Studio初次使用" class="headerlink" title="Visual Studio初次使用"></a>Visual Studio初次使用</h2><p>打开界面如下图,点击右上角的创建新项目</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/sy1.jpg"></p><p>出现下面的界面首先选择语言为<strong>C#**，在下滑选到</strong>Windows窗体应用**</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/sy2.jpg"></p><p>完成选择<strong>存储路径，文件重命名</strong>等操作</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/sy3.jpg"></p><p>完成上面的操作就出现下图的界面</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/sy4.jpg"></p><hr><h2 id="一个简单的窗体设计"><a href="#一个简单的窗体设计" class="headerlink" title="一个简单的窗体设计"></a>一个简单的窗体设计</h2><h3 id="简单介绍初始化界面的几大板块"><a href="#简单介绍初始化界面的几大板块" class="headerlink" title="简单介绍初始化界面的几大板块"></a>简单介绍初始化界面的几大板块</h3><p>解决方案管理器：可以修改窗体的名字，引用一些相关的库等</p><p>主窗体：用来对各种工具进行<strong>整合，排版</strong>等</p><p>工具箱：提供各种各样的工具来<strong>实现各种功能</strong>，比如按钮，文本框，菜单，状态栏等</p><p>属性窗口：对各个工具的一些<strong>属性</strong>进行<strong>设置，修改</strong>等</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/sj1.jpg"></p><h3 id="简单的窗体设计"><a href="#简单的窗体设计" class="headerlink" title="简单的窗体设计"></a>简单的窗体设计</h3><p><strong>注意：要编写窗体加载事件，需要将鼠标放在窗体范围内，双击，则可以启动窗体加载事件的头部</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/sj2.jpg"></p><p>在如下的分号中输入相应的代码可以完成相关功能的实现</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           </span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>下图是在窗体显示一句文字的代码：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/sj3.jpg"></p><p>编辑好后单击工具栏上的<strong>绿色箭头</strong>即可执行该窗体</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/sj4.jpg"></p><p>执行后的结果如下</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/ZonuyCode/myhexo@main/img/sj5.jpg"></p><p>我们可以看到，标题栏上显示出我们想要的文字，在窗体的中间也显示出“Hello World!”字样</p><p>另外，我们的窗体默认是在左上角一个特定的位置</p><hr><h2 id="使用Visual-Studio连接数据库"><a href="#使用Visual-Studio连接数据库" class="headerlink" title="使用Visual Studio连接数据库"></a>使用Visual Studio连接数据库</h2><p>对于一些大型的工程来说，需要很好的窗体设计，但也要有一个完整的数据库，并且能在窗体中实现增删改查等工作</p><p>笔者这里用的是Mysql数据库，也可以使用SQL Server等关系型数据库</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">String connetStr = <span class="string">&quot;server = 127.0.0.1;user = Mysql的用户名;password = 密码; database = 数据库的名称;&quot;</span>;</span><br><span class="line">            <span class="comment">// server=127.0.0.1/localhost 代表本机，端口号port默认是3306可以不写</span></span><br><span class="line">            MySqlConnection conn = <span class="keyword">new</span> MySqlConnection(connetStr);</span><br><span class="line">            conn.Open();<span class="comment">//打开通道，建立连接，可能出现异常,使用try catch语句</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;已经建立连接&quot;</span>);</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;打开数据库连接成功&quot;</span>);</span><br><span class="line">            <span class="comment">// 关闭数据库连接</span></span><br><span class="line">            conn.Close();</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;关闭数据库连接成功&quot;</span>);</span><br></pre></td></tr></table></figure><p>上面的这段代码是用来测试数据库连接是否成功，你可以把它放在一个Button里进行测试</p><p>测试成功后就可以在C#中编写MySQL的相关语句来完成对数据库的相关操作</p><hr><p>谢谢你来看我的博客 — Zonuy</p><p>2020年11月7日</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;使用Visual-Studio-2019窗体设计&quot;&gt;&lt;a href=&quot;#使用Visual-Studio-2019窗体设计&quot; class=&quot;headerlink&quot; title=&quot;使用Visual Studio 2019窗体设计&quot;&gt;&lt;/a&gt;使用Visual Studio 2019窗体设计&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;Visual-Studio-2019介绍&quot;&gt;&lt;a href=&quot;#Visual-Studio-2019介绍&quot; class=&quot;headerlink&quot; title=&quot;Visual Studio 2019介绍&quot;&gt;&lt;/a&gt;Visual Studio 2019介绍&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Visual Studio 2019&lt;/strong&gt; 可完美支持 C#、C++、Python、&lt;a href=&quot;https://www.iplaysoft.com/tag/javascript&quot;&gt;JavaScript&lt;/a&gt;、Node.js、Visual Basic、&lt;a href=&quot;https://www.iplaysoft.com/tag/html&quot;&gt;HTML&lt;/a&gt; 等流行的编程语言，不仅能用它来编写 &lt;a href=&quot;https://www.iplaysoft.com/windows10.html&quot;&gt;Windows 10&lt;/a&gt; UWP 通用程序、开发 &lt;a href=&quot;https://www.iplaysoft.com/tag/web&quot;&gt;WEB&lt;/a&gt; 服务、开发&lt;a href=&quot;https://www.iplaysoft.com/category/game&quot;&gt;游戏&lt;/a&gt;，你甚至还能借助 Xamarin 开发 &lt;a href=&quot;https://www.iplaysoft.com/os/ios-platform&quot;&gt;iOS&lt;/a&gt;、&lt;a href=&quot;https://www.iplaysoft.com/os/android-platform&quot;&gt;Android&lt;/a&gt; 移动平台应用。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="C#,MySql，Windows窗体设计" scheme="http://example.com/tags/C-MySql%EF%BC%8CWindows%E7%AA%97%E4%BD%93%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>那些年，那些歌</title>
    <link href="http://example.com/2020/10/09/%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%BE%88%E5%86%92%E9%99%A9%E7%9A%84%E6%A2%A6/"/>
    <id>http://example.com/2020/10/09/%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%BE%88%E5%86%92%E9%99%A9%E7%9A%84%E6%A2%A6/</id>
    <published>2020-10-09T08:02:08.000Z</published>
    <updated>2020-10-31T15:42:28.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《歌手2018》"><a href="#《歌手2018》" class="headerlink" title="《歌手2018》"></a>《歌手2018》</h1><p>《阿刁》—  张韶涵</p><p>《后来》— 李晓东</p><p>《You and I》— 李圣杰</p><p>《Mr Man》— 汪峰</p><p>《Ain‘t Nobody》 — Jessie J</p><p>《Queen Be》 — 张天</p><p>《易燃易爆炸》— 华晨宇</p><p>《狼》— 苏诗丁</p><p>《Sunny Ⅱ》— 李泉</p><p>《天堂》 — 腾格尔</p><p>《飞鸟与鱼》 — 郁可唯</p><p>《红颜劫》 — 霍尊</p><p>《Rolling In The Deep》 — KZ</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;《歌手2018》&quot;&gt;&lt;a href=&quot;#《歌手2018》&quot; class=&quot;headerlink&quot; title=&quot;《歌手2018》&quot;&gt;&lt;/a&gt;《歌手2018》&lt;/h1&gt;&lt;p&gt;《阿刁》—  张韶涵&lt;/p&gt;
&lt;p&gt;《后来》— 李晓东&lt;/p&gt;
&lt;p&gt;《You and I》</summary>
      
    
    
    
    <category term="音乐" scheme="http://example.com/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
    <category term="Music" scheme="http://example.com/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/10/09/hello-world/"/>
    <id>http://example.com/2020/10/09/hello-world/</id>
    <published>2020-10-09T07:59:48.029Z</published>
    <updated>2020-11-07T02:16:51.304Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
